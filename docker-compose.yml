version: "3.9"
services:
  db:
    image: "postgres:10.11"
    container_name: db
    environment:
      - "POSTGRES_USER=admin"
      - "POSTGRES_PASSWORD=admin"
    restart: always
    expose: ["5432"]
    volumes:
      - db-data:/var/lib/postgresql/data
    networks:
      - app_network

  backend:
    build:
      context: ./backend
    container_name: backend
    ports: ["3000:3000"]
    depends_on:
      - db
    environment:
      - DB_USERNAME=admin
      - DB_PASSWORD=admin
      - DB_HOST=db
    restart: unless-stopped
    links:
      - db:db
    networks:
      - app_network

  sub-broker:
    build: ./backend/extras
    container_name: sub-broker
    depends_on:
      - db
      - backend
    restart: always
    links:
      - db:db
    networks:
      - app_network

  producers:
    build:
      context: ./backend/extras/tasks/producers
    container_name: producers
    ports: ["8080:8080"]
    restart: always
    networks:
      - app_network
    depends_on:
      - redis
      - backend
    environment:
      - REDIS_PORT=6379
      - REDIS_PASSWORD=1234
      - REDIS_HOST=redis

  workers:
    build:
      context: ./backend/extras/tasks/workers
    container_name: workers
    networks:
      - app_network
    depends_on:
      - backend
      - redis
      - producers
      - db
    restart: always
    environment:
      - REDIS_PORT=6379
      - REDIS_PASSWORD=1234
      - REDIS_HOST=redis
      - DB_USERNAME=admin
      - DB_PASSWORD=admin
      - SENDGRID_API_KEY=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

  redis:
    image: "redis:7.0.5"
    container_name: redis
    restart: always
    ports: ["6379:6379"]
    networks:
      - app_network
    command: redis-server --requirepass 1234

networks:
  app_network:
    driver: bridge

volumes:
  db-data: